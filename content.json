{"meta":{"title":"睡觉万岁","subtitle":"","description":"在梦里啥都有","author":"毛","url":"http://example.com","root":"/"},"pages":[{"title":"资源","date":"2022-12-31T14:33:21.000Z","updated":"2022-12-31T14:37:12.176Z","comments":false,"path":"resources/index.html","permalink":"http://example.com/resources/index.html","excerpt":"","text":""},{"title":"about","date":"2022-12-31T14:33:19.000Z","updated":"2023-02-23T12:58:13.578Z","comments":true,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":"ttteeexxxtt"},{"title":"分类","date":"2022-12-31T14:33:04.000Z","updated":"2022-12-31T14:36:05.876Z","comments":false,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2022-12-31T14:33:16.000Z","updated":"2022-12-31T14:36:40.295Z","comments":false,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"远离不规范书籍，不然会变得不幸","slug":"远离不规范书籍，不然会变得不幸","date":"2023-03-04T09:14:48.511Z","updated":"2023-03-04T09:32:19.232Z","comments":true,"path":"2023/03/04/远离不规范书籍，不然会变得不幸/","link":"","permalink":"http://example.com/2023/03/04/%E8%BF%9C%E7%A6%BB%E4%B8%8D%E8%A7%84%E8%8C%83%E4%B9%A6%E7%B1%8D%EF%BC%8C%E4%B8%8D%E7%84%B6%E4%BC%9A%E5%8F%98%E5%BE%97%E4%B8%8D%E5%B9%B8/","excerpt":"","text":"远离不规范书籍,不然会变得不幸","categories":[{"name":"2023","slug":"2023","permalink":"http://example.com/categories/2023/"}],"tags":[{"name":"casual_talk","slug":"casual-talk","permalink":"http://example.com/tags/casual-talk/"}]},{"title":"2月开学总结","slug":"2月开学总结","date":"2023-03-01T06:57:51.608Z","updated":"2023-03-01T07:17:25.763Z","comments":true,"path":"2023/03/01/2月开学总结/","link":"","permalink":"http://example.com/2023/03/01/2%E6%9C%88%E5%BC%80%E5%AD%A6%E6%80%BB%E7%BB%93/","excerpt":"2月开学总结","text":"2月开学总结 每日200单词，真的坚持不下来（我妈说过一句老话：新的马桶只有三天是香的） 周五-周日每日50页django目前停滞（p117），在后渲前的简单&#123;&#123;&#125;&#125;不清楚具体语法，有时间看b具体简单讲解，我实在无法理解，这种书怎么出版的，前20页每页都有错误，这个人抄官方文档都能抄错？？？？！！！ 问了师姐她复习进度，四月之前（include四月）刷完1800,以及师姐说英二难度比江苏高考英语难度小 临时接了挑战杯的复赛答辩，要准备讲演稿子 目前数学进度第一章（第一遍做不到不看视频（看视频时真的费时间），但已经都忘了（为什么上学期我要拒绝高数老师让我做她的助教（扇自己耳光））） 英语6级太难了 准备算法考试 所有的东西并行真的做不到，一天只能选一个（上周多线程进行复习&amp;&amp;学习，效率极低） 佛山顺德愿望get 实验室老师开始整幺蛾子了：周四下午7、8节加了一节选修课。明天去一节看看情况，不行就退实验室;以及未来一个月内实验室搬迁，不行就退。 昨天去交材料，党建的辅导老师说：好久没看见你了，你最近在干嘛。 我：准备考研，和实验室的东西。 老师:你准备考研的话要平衡比赛和考研准备的东西 老师:考研的书差不多要买了 我：嗯嗯12.仰天长叹，下个月三场考试，4月份一轮，师姐说828要在这学期内过完，操作系统跟着这学期的老师好好学一遍，就没什么问题，我真的能平衡吗……实验室感觉差不多可以退了，但又想拼一把计算机设计大赛，自己再做个东西出来…… emoji format 本来想花15min解决的note，花了1个小时的原因窒息","categories":[{"name":"2023","slug":"2023","permalink":"http://example.com/categories/2023/"}],"tags":[{"name":"casual_talk","slug":"casual-talk","permalink":"http://example.com/tags/casual-talk/"}]},{"title":"Import pymysql could not be resolved from.md","slug":"Import pymysql could not be resolved from","date":"2023-02-26T13:23:28.035Z","updated":"2023-03-01T07:11:02.424Z","comments":true,"path":"2023/02/26/Import pymysql could not be resolved from/","link":"","permalink":"http://example.com/2023/02/26/Import%20pymysql%20could%20not%20be%20resolved%20from/","excerpt":"","text":"Import “pymysql” could not be resolved from 在anaconda里面装一个 首先先切进django的虚拟环境里面 在Anaconda中，可以通过使用conda命令来创建和管理虚拟环境。要切换已创建的虚拟环境，可以使用以下命令： 列出已有环境： 1conda info --envs 激活目标环境： 1conda activate &lt;env_name&gt; 这里&lt;env_name&gt;是你想要激活的虚拟环境的名称。激活环境后，你可以在该环境中使用安装的软件包和工具。 取消激活当前环境： 1conda deactivate 这将使当前环境不再处于活动状态，回到默认的基础环境。 注意：如果你在使用Anaconda Navigator，也可以通过选择“Environments”选项卡，然后单击目标环境的名称来激活虚拟环境。 conda install pymysql 看你anaconda用的是什么源，国内的记得关闭魔法上网工具","categories":[{"name":"2023","slug":"2023","permalink":"http://example.com/categories/2023/"}],"tags":[{"name":"django","slug":"django","permalink":"http://example.com/tags/django/"}]},{"title":"官方文档","slug":"null¶","date":"2023-02-24T12:24:35.657Z","updated":"2023-03-01T07:09:14.756Z","comments":true,"path":"2023/02/24/null¶/","link":"","permalink":"http://example.com/2023/02/24/null%C2%B6/","excerpt":"https://stackoverflow.com/questions/19428572/django-templatesyntaxerror-could-not-parse-the-remainder","text":"https://stackoverflow.com/questions/19428572/django-templatesyntaxerror-could-not-parse-the-remainder 模型字段参考 字段选项 https://docs.djangoproject.com/zh-hans/4.1/ref/models/fields/#validators 以下参数对所以字段类型均有效，且是可选的。 null¶ Field.``null¶ 如果是 True， Django 将在数据库中存储空值为 NULL。默认为 False。 避免在基于字符串的字段上使用 null，如 CharField 和 TextField。如果一个基于字符串的字段有 null=True，这意味着它有两种可能的“无数据”值。NULL，和空字符串。在大多数情况下，“无数据”有两种可能的值是多余的，Django 的惯例是使用空字符串，而不是 NULL。一个例外是当一个 CharField 同时设置了 unique=True 和 blank=True。在这种情况下，null=True 是需要的，以避免在保存具有空白值的多个对象时违反唯一约束。 无论是基于字符串的字段还是非字符串的字段，如果希望在表单中允许空值，还需要设置 blank=True，因为 null 参数只影响数据库的存储（参见 blank ）。","categories":[{"name":"2023","slug":"2023","permalink":"http://example.com/categories/2023/"}],"tags":[{"name":"django","slug":"django","permalink":"http://example.com/tags/django/"}]},{"title":"Module \"django.contrib.sessions.serializers\" does not define a \"PicleSerializer\" attribute/class","slug":"Module django.contrib.sessions.serializers does not define a PicleSerializer attributeclass","date":"2023-02-24T07:05:59.648Z","updated":"2023-03-01T07:09:09.742Z","comments":true,"path":"2023/02/24/Module django.contrib.sessions.serializers does not define a PicleSerializer attributeclass/","link":"","permalink":"http://example.com/2023/02/24/Module%20django.contrib.sessions.serializers%20does%20not%20define%20a%20PicleSerializer%20attributeclass/","excerpt":"Module “django.contrib.sessions.serializers” does not define a “PicleSerializer” attribute&#x2F;class","text":"Module “django.contrib.sessions.serializers” does not define a “PicleSerializer” attribute&#x2F;class 是这本书打错了hhhh https://docs.djangoproject.com/zh-hans/4.1/topics/http/sessions/ 在这里ctrl+F找 serializers 最后一个 serializers.``PickleSerializer tmd是这个玩意儿！ 不是picle睡觉哦pick 服了这个写书的老六！","categories":[{"name":"2023","slug":"2023","permalink":"http://example.com/categories/2023/"}],"tags":[{"name":"django","slug":"django","permalink":"http://example.com/tags/django/"}]},{"title":"无法加载文件C:\\Users\\xxx\\Documents\\WindowsPowerShell\\profile.ps1","slug":"无法加载文件CUsersxxxDocumentsWindowsPowerShellprofile.ps1，因为在此系统上禁止运行脚本","date":"2023-02-24T04:38:04.277Z","updated":"2023-03-01T07:08:52.941Z","comments":true,"path":"2023/02/24/无法加载文件CUsersxxxDocumentsWindowsPowerShellprofile.ps1，因为在此系统上禁止运行脚本/","link":"","permalink":"http://example.com/2023/02/24/%E6%97%A0%E6%B3%95%E5%8A%A0%E8%BD%BD%E6%96%87%E4%BB%B6CUsersxxxDocumentsWindowsPowerShellprofile.ps1%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%9C%A8%E6%AD%A4%E7%B3%BB%E7%BB%9F%E4%B8%8A%E7%A6%81%E6%AD%A2%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC/","excerpt":"无法加载文件C:\\Users\\xxx\\Documents\\WindowsPowerShell\\profile.ps1，因为在此系统上禁止运行脚本","text":"无法加载文件C:\\Users\\xxx\\Documents\\WindowsPowerShell\\profile.ps1，因为在此系统上禁止运行脚本 问题描述打开 PowerShell 提示如下报错信息。 123456789101112Windows PowerShell版权所有（C） Microsoft Corporation。保留所有权利。安装最新的 PowerShell，了解新功能和改进！https://aka.ms/PSWindows. : 无法加载文件 C:\\Users\\87897\\Documents\\WindowsPowerShell\\profile.ps1，因为在此系统上禁止运行脚本。有关详细信息，请参阅 https:/go.microsoft.com/fwlink/?LinkID=135170 中的 about_Execution_Policies。所在位置 行:1 字符: 3+ . &#x27;C:\\Users\\87897\\Documents\\WindowsPowerShell\\profile.ps1&#x27;+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ + CategoryInfo : SecurityError: (:) []，PSSecurityException1234567891011 原因分析输入 get-ExecutionPolicy 输出 Restricted，即脚本执行策略受限。 123PS C:\\Windows\\system32&gt; get-ExecutionPolicyRestricted12 解决方案更换脚本执行策略：set-ExecutionPolicy RemoteSigned，然后输入 Y。 1234567PS C:\\Windows\\system32&gt; set-ExecutionPolicy RemoteSigned执行策略更改执行策略可帮助你防止执行不信任的脚本。更改执行策略可能会产生安全风险，如 https:/go.microsoft.com/fwlink/?LinkID=135170中的 about_Execution_Policies 帮助主题所述。是否要更改执行策略?[Y] 是(Y) [A] 全是(A) [N] 否(N) [L] 全否(L) [S] 暂停(S) [?] 帮助 (默认值为“N”): Y123456 更换完成后，再次使用命令 get-ExecutionPolicy 查看脚本执行策略。 123PS C:\\Windows\\system32&gt; get-ExecutionPolicyRemoteSigned12 可以发现已经更改了。问题完美解决，over~~😊","categories":[{"name":"2023","slug":"2023","permalink":"http://example.com/categories/2023/"}],"tags":[{"name":"powershell","slug":"powershell","permalink":"http://example.com/tags/powershell/"}]},{"title":"anaconda安装其他东西","slug":"Win10下Anaconda使用conda activate报错Your shell has not been properly configured to use 'conda activate'","date":"2023-02-24T04:23:35.093Z","updated":"2023-03-01T07:08:25.989Z","comments":true,"path":"2023/02/24/Win10下Anaconda使用conda activate报错Your shell has not been properly configured to use 'conda activate'/","link":"","permalink":"http://example.com/2023/02/24/Win10%E4%B8%8BAnaconda%E4%BD%BF%E7%94%A8conda%20activate%E6%8A%A5%E9%94%99Your%20shell%20has%20not%20been%20properly%20configured%20to%20use%20'conda%20activate'/","excerpt":"","text":"Win10下Anaconda使用conda activate报错Your shell has not been properly configured to use ‘conda activate’ 1234567891011121314151617181920212223PS E:\\dijango&gt; conda activate baseCommandNotFoundError: Your shell has not been properly configured to use &#x27;conda activate&#x27;.If using &#x27;conda activate&#x27; from a batch script, change yourinvocation to &#x27;CALL conda.bat activate&#x27;.To initialize your shell, run $ conda init &lt;SHELL_NAME&gt;Currently supported shells are:- bash- cmd.exe- fish- tcsh- xonsh- zsh- powershellSee &#x27;conda init --help&#x27; for more information and options.IMPORTANT: You may need to close and restart your shell after running &#x27;conda init&#x27;. 先以管理员身份打开cmd。试一下conda activate 环境名称。如果命令行提示 1Your shell has not been properly configured to use ‘conda activate’. 然后下面还提示 conda init &lt;SHELL NAME&gt; 就按照他的要求，输入一下 conda init cmd.exe 或者 conda init powershell 这两条都试试，回车，重启cmd说不定就好了。反正我好了。","categories":[{"name":"2023","slug":"2023","permalink":"http://example.com/categories/2023/"}],"tags":[{"name":"anaconda","slug":"anaconda","permalink":"http://example.com/tags/anaconda/"}]},{"title":"闭包","slug":"闭包","date":"2023-02-23T14:17:31.662Z","updated":"2023-02-23T13:50:32.190Z","comments":true,"path":"2023/02/23/闭包/","link":"","permalink":"http://example.com/2023/02/23/%E9%97%AD%E5%8C%85/","excerpt":"闭包","text":"闭包 12345678910111213141516171819202122232425262728// 1.污染环境的全局变量实现函数执行一次次数减一 var a=10; function fa()&#123; a--; console.log(a); &#125; // 2.那就换成局部变量试试 function fb()&#123; var a=10; a--; console.log(a); &#125;/*它居然不动了*/ // 3.闭包 function fc()&#123; let a=10; function fd()&#123; a--; console.log(a); &#125; return fd; &#125; var fm=fc();//完成这句才算闭包 // 总结 // 1.有嵌套函数 // 2.内部函数引用外部作用域 // 3.返回值是函数 // 4.船舰一个对象函数，让其长期驻留","categories":[{"name":"2022","slug":"2022","permalink":"http://example.com/categories/2022/"}],"tags":[{"name":"js","slug":"js","permalink":"http://example.com/tags/js/"}]},{"title":"匿名函数","slug":"匿名函数","date":"2023-02-23T14:17:31.647Z","updated":"2023-02-23T13:50:36.485Z","comments":true,"path":"2023/02/23/匿名函数/","link":"","permalink":"http://example.com/2023/02/23/%E5%8C%BF%E5%90%8D%E5%87%BD%E6%95%B0/","excerpt":"匿名函数","text":"匿名函数 123456789101112131415161718// 1.表达式赋值给变量来使用var fa =function()&#123; console.log(20);&#125;fa();// 2.当作函数来被调用setTimeout(function()&#123;console.log(30);&#125;,1000);// 3.通过函数嵌套当成闭包里的返回函数来调用function fb()&#123; return function()&#123;console.log(40);&#125;&#125;var fm=fb();fm();// 4.函数自己调用自己，也就是自调用。!function()&#123;console.log(50);&#125;();//匿名函数智能被调用或是自调用。//带参数的匿名函数自调用!function(a,b)&#123;console.log(a+b);&#125;(40,50);","categories":[{"name":"2022","slug":"2022","permalink":"http://example.com/categories/2022/"}],"tags":[{"name":"js","slug":"js","permalink":"http://example.com/tags/js/"}]},{"title":"回调函数","slug":"回调函数","date":"2023-02-23T14:17:31.647Z","updated":"2023-02-23T13:50:29.285Z","comments":true,"path":"2023/02/23/回调函数/","link":"","permalink":"http://example.com/2023/02/23/%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0/","excerpt":"回调函数","text":"回调函数 12345678910111213141516171819// 先定义一个函数，用来做短时间或无法脱身的事情，同步function sdo(does)&#123; console.log(does);&#125;// 在定义以恶搞函数，用来做长时间等待的事情，异步//用回调解决这个问题function ldo(doing,callback)&#123; setTimeout(()=&gt;&#123; console.log(doing); callback(&#x27;吃鸡&#x27;) &#125;,1000);&#125;// 接下来要开始迫害只因sdo(&#x27;买鸡&#x27;)sdo(&#x27;杀鸡&#x27;)ldo(&#x27;炖鸡&#x27;,sdo)//===&gt;函数作为参数// sdo(&#x27;吃鸡&#x27;)// 会发现不对劲","categories":[{"name":"2022","slug":"2022","permalink":"http://example.com/categories/2022/"}],"tags":[{"name":"js","slug":"js","permalink":"http://example.com/tags/js/"}]},{"title":"reat-router","slug":"router","date":"2023-02-23T14:17:31.647Z","updated":"2023-02-23T13:50:45.673Z","comments":true,"path":"2023/02/23/router/","link":"","permalink":"http://example.com/2023/02/23/router/","excerpt":"随意使用您选择的打包器，例如 Create React App 1npx create-react-app router-tutorial","text":"随意使用您选择的打包器，例如 Create React App 1npx create-react-app router-tutorial 然后安装 React Router 依赖项： 12cd router-tutorialnpm install react-router-dom@6 history@5 然后编辑你的App.js，让它变得很无聊: 1234567export default function App() &#123; return ( &lt;div&gt; &lt;h1&gt;Bookkeeper!&lt;/h1&gt; &lt;/div&gt; );&#125; 最后，确认index.js or main.jsx（取决于你的打包工具）是可用的： root渲染App 123456import &#123; render &#125; from &quot;react-dom&quot;;import App from &quot;./App&quot;;const rootElement = document.getElementById(&quot;root&quot;);render(&lt;App /&gt;, rootElement); 然后是删了一点东西 启动您的React应用： 1npm start 连接路由首先，我们想把你的应用连接到路由: import ‘ BrowserRouter ‘，并用它包裹你的整个应用。(修改index.js) 1234567891011import &#123; render &#125; from &quot;react-dom&quot;;import &#123; BrowserRouter &#125; from &quot;react-router-dom&quot;;import App from &quot;./App&quot;;const rootElement = document.getElementById(&quot;root&quot;);render( &lt;BrowserRouter&gt; &lt;App /&gt; &lt;/BrowserRouter&gt;, rootElement); 应用程序中没有任何变化，但现在我们已准备好开始处理路由。 添加一些链接打开 src&#x2F;App.js、导入 Link 并添加一些全局导航。注：在本教程中不要对待样式太认真，我们只是为了方便而使用内联样式，你可以根据需要设置样式。 123456789101112131415161718import &#123; Link &#125; from &quot;react-router-dom&quot;;export default function App() &#123; return ( &lt;div&gt; &lt;h1&gt;Bookkeeper&lt;/h1&gt; &lt;nav style=&#123;&#123; borderBottom: &quot;solid 1px&quot;, paddingBottom: &quot;1rem&quot; &#125;&#125; &gt; &lt;Link to=&quot;/invoices&quot;&gt;Invoices&lt;/Link&gt; |&#123;&quot; &quot;&#125; &lt;Link to=&quot;/expenses&quot;&gt;Expenses&lt;/Link&gt; &lt;/nav&gt; &lt;/div&gt; );&#125; 单击链接和后退&#x2F;前进按钮。React Router 现在正在控制 URL！ 我们还没有在 URL 更改时呈现任何路由，但 Link 可以更改 URL，而不会导致整个页面重新加载。 添加一些路由添加几个新文件： src/routes/invoices.jsx src/routes/expenses.jsx (文件的位置并不重要，但是当你想要自动生成后端API，服务器渲染，代码分割或者更多的功能时，像这样命名你的文件可以很容易地将这个应用程序移植到其他项目，Remix😉) 现在在文件中加入以下代码： expenses.jsx 1234567export default function Expenses() &#123; return ( &lt;main style=&#123;&#123; padding: &quot;1rem 0&quot; &#125;&#125;&gt; &lt;h2&gt;Expenses&lt;/h2&gt; &lt;/main&gt; );&#125; invoices.jsx 1234567export default function Invoices() &#123; return ( &lt;main style=&#123;&#123; padding: &quot;1rem 0&quot; &#125;&#125;&gt; &lt;h2&gt;Invoices&lt;/h2&gt; &lt;/main&gt; );&#125; 最后，让我们通过在main.jsx或者index.js 中创建我们的第一个“路由配置”来让 React Router 在不同的 URL 上呈现我们的界面。 123456789101112131415161718192021import &#123; render &#125; from &quot;react-dom&quot;;import &#123; BrowserRouter, Routes, Route&#125; from &quot;react-router-dom&quot;;import App from &quot;./App&quot;;import Expenses from &quot;./routes/expenses&quot;;import Invoices from &quot;./routes/invoices&quot;;const rootElement = document.getElementById(&quot;root&quot;);render( &lt;BrowserRouter&gt; &lt;Routes&gt; &lt;Route path=&quot;/&quot; element=&#123;&lt;App /&gt;&#125; /&gt; &lt;Route path=&quot;expenses&quot; element=&#123;&lt;Expenses /&gt;&#125; /&gt; &lt;Route path=&quot;invoices&quot; element=&#123;&lt;Invoices /&gt;&#125; /&gt; &lt;/Routes&gt; &lt;/BrowserRouter&gt;, rootElement); 注意：当路由为”&#x2F;“时它渲染App组件，在”&#x2F;invoices”时它渲染Invoices组件。 所以到这里我们可以看出，点击后会整页都会变换掉 嵌套路由你可能已经注意到，当点击链接时，“App”中的布局会消失。共享布局是一件令人头疼的事情。我们已经知道，大多数UI都是一系列嵌套布局，这些布局总会映射到URL上，所以这个思路被直接植入到React Router中。 12345678910111213141516171819202122import &#123; render &#125; from &quot;react-dom&quot;;import &#123; BrowserRouter, Routes, Route&#125; from &quot;react-router-dom&quot;;import App from &quot;./App&quot;;import Expenses from &quot;./routes/expenses&quot;;import Invoices from &quot;./routes/invoices&quot;;const rootElement = document.getElementById(&quot;root&quot;);render( &lt;BrowserRouter&gt; &lt;Routes&gt; &lt;Route path=&quot;/&quot; element=&#123;&lt;App /&gt;&#125;&gt; &lt;Route path=&quot;expenses&quot; element=&#123;&lt;Expenses /&gt;&#125; /&gt; &lt;Route path=&quot;invoices&quot; element=&#123;&lt;Invoices /&gt;&#125; /&gt; &lt;/Route&gt; &lt;/Routes&gt; &lt;/BrowserRouter&gt;, rootElement); 当路由有子节点时，它会做两件事： 它嵌套了 URL (&quot;/&quot; + &quot;expenses&quot; 和 &quot;/&quot; + &quot;invoices&quot;) 当子路由匹配时，它将嵌套共享布局的 UI 组件： 但是，为了使（2）生效，我们需要在App.jsx“父”路由中渲染一个 组件。 12345678910111213141516171819import &#123; Outlet, Link &#125; from &quot;react-router-dom&quot;;export default function App() &#123; return ( &lt;div&gt; &lt;h1&gt;Bookkeeper&lt;/h1&gt; &lt;nav style=&#123;&#123; borderBottom: &quot;solid 1px&quot;, paddingBottom: &quot;1rem&quot; &#125;&#125; &gt; &lt;Link to=&quot;/invoices&quot;&gt;Invoices&lt;/Link&gt; |&#123;&quot; &quot;&#125; &lt;Link to=&quot;/expenses&quot;&gt;Expenses&lt;/Link&gt; &lt;/nav&gt; &lt;Outlet /&gt; &lt;/div&gt; );&#125; 现在再次单击。父路由 ( App.js) 仍然存在，而 &lt;Outlet&gt; 在两个子路由 (&lt;Invoices&gt; 和 &lt;Expenses&gt;)之间切换！ 正如我们稍后将看到的，这适用于路由层次结构的任何级别，并且非常强大。 列出发票通常你会从某个地方的服务器获取数据，但在本教程中，让我们造一些数据，这样我们就可以专注于路由。 创建一个文件src&#x2F;data.js并将其复制&#x2F;粘贴到那里： 123456789101112131415161718192021222324252627282930313233343536let invoices = [ &#123; name: &quot;Santa Monica&quot;, number: 1995, amount: &quot;$10,800&quot;, due: &quot;12/05/1995&quot; &#125;, &#123; name: &quot;Stankonia&quot;, number: 2000, amount: &quot;$8,000&quot;, due: &quot;10/31/2000&quot; &#125;, &#123; name: &quot;Ocean Avenue&quot;, number: 2003, amount: &quot;$9,500&quot;, due: &quot;07/22/2003&quot; &#125;, &#123; name: &quot;Tubthumper&quot;, number: 1997, amount: &quot;$14,000&quot;, due: &quot;09/01/1997&quot; &#125;, &#123; name: &quot;Wide Open Spaces&quot;, number: 1998, amount: &quot;$4,600&quot;, due: &quot;01/27/2998&quot; &#125;];export function getInvoices() &#123; return invoices;&#125; 现在我们可以在发票路由中使用它。让我们也添加一些样式来获得侧边栏导航布局。随意复制&#x2F;粘贴所有这些，但要特别注意 &lt;Link&gt; 组件需要 to 属性： 1234567891011121314151617181920212223242526import &#123; Link &#125; from &quot;react-router-dom&quot;;import &#123; getInvoices &#125; from &quot;../data&quot;;export default function Invoices() &#123; let invoices = getInvoices(); return ( &lt;div style=&#123;&#123; display: &quot;flex&quot; &#125;&#125;&gt; &lt;nav style=&#123;&#123; borderRight: &quot;solid 1px&quot;, padding: &quot;1rem&quot; &#125;&#125; &gt; &#123;invoices.map(invoice =&gt; ( &lt;Link style=&#123;&#123; display: &quot;block&quot;, margin: &quot;1rem 0&quot; &#125;&#125; to=&#123;`/invoices/$&#123;invoice.number&#125;`&#125; key=&#123;invoice.number&#125; &gt; &#123;invoice.name&#125; &lt;/Link&gt; ))&#125; &lt;/nav&gt; &lt;/div&gt; );&#125;","categories":[{"name":"2022","slug":"2022","permalink":"http://example.com/categories/2022/"}],"tags":[{"name":"reat","slug":"reat","permalink":"http://example.com/tags/reat/"}]},{"title":"箭头函数","slug":"箭头函数","date":"2023-02-23T14:17:31.647Z","updated":"2023-02-23T13:50:33.998Z","comments":true,"path":"2023/02/23/箭头函数/","link":"","permalink":"http://example.com/2023/02/23/%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0/","excerpt":"箭头函数","text":"箭头函数 12345678910111213141516// 1.箭头函数常见写法let fun1=(a,b)=&gt;&#123;return a+b;&#125;// 2.箭头函数没有参数，那么也要写括号let fun2=()=&gt;&#123;console.log(&#x27;你好&#x27;);&#125;// 3.如果只有一个参数，那么括号可以省略let fun3=name=&gt;&#123;console.log(`你好$&#123;name&#125;`);&#125;// 4.如果函数体只有一句执行代码，那么可以省略大括号，同时代码默认会被ruturn出去let fun4=name=&gt;`你好$&#123;name&#125;`;console.log(fun4(&#x27;小明&#x27;));// 5.箭头函数没有自己的this，他的this是来自于上层作用域的this let obj=&#123; fun5()&#123;console.log(&#x27;fun5:&#x27;,this);&#125;, fun6:()=&gt;&#123;console.log(&#x27;fun6:&#x27;,this);&#125; &#125; obj.fun5(); obj.fun6();","categories":[{"name":"2022","slug":"2022","permalink":"http://example.com/categories/2022/"}],"tags":[{"name":"js","slug":"js","permalink":"http://example.com/tags/js/"}]},{"title":"解决bash hexo command not found","slug":"解决bash hexo command not found","date":"2023-02-23T14:17:31.647Z","updated":"2023-03-01T07:08:49.612Z","comments":true,"path":"2023/02/23/解决bash hexo command not found/","link":"","permalink":"http://example.com/2023/02/23/%E8%A7%A3%E5%86%B3bash%20hexo%20command%20not%20found/","excerpt":"解决bash: hexo: command not found","text":"解决bash: hexo: command not found 检查 nodejs 和 npm 是否正常，依次输入命令 node -v 和 npm -v 看看是否有相关版本信息 出现了版本信息就证明 nodejs 和 npm 是没有问题的，那么就应该是环境变量的配置问题了，在【此电脑】右键【属性】，依次选择【高级系统设置】-【环境变量】，选择系统变量 Path，将 node_modules 下的 .bin 文件路径添加到 Path 里面 注意你的博客目录下应该有两个 node_modules 文件夹 F:\\blog 和F:\\blog\\BLOG 我是加了第一个module在环境变量 别的博主有的加了第二个module 总之自己试一下按哪个 环境变量添加好了之后重新打开 git 即可运行 hexo 命令，如果此时仍然无法执行 hexo 命令，那就只能拿出终极绝招了，运行命令 npm install hexo-cli -g 重新安装 hexo 即可！","categories":[{"name":"2023","slug":"2023","permalink":"http://example.com/categories/2023/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://example.com/tags/hexo/"}]},{"title":"PyQt5显示图片","slug":"PyQt5显示图片","date":"2023-02-23T14:17:31.640Z","updated":"2023-02-23T14:03:39.746Z","comments":true,"path":"2023/02/23/PyQt5显示图片/","link":"","permalink":"http://example.com/2023/02/23/PyQt5%E6%98%BE%E7%A4%BA%E5%9B%BE%E7%89%87/","excerpt":"PyQt5显示图片","text":"PyQt5显示图片 123redImg=QImage()QImage.load(redImg,&#x27;path&#x27;,format=&#x27;png&#x27;)self.label_3.setPixmap(QtGui.QPixmap(redImg)) 123img_path=&#x27;path&#x27;self.showImage = QPixmap(img_path).scaled(self.label_3.width(), self.label_3.height()) # 适应窗口大小self.label_3.setPixmap(self.showImage) # 显示图片 1234567image=cv2.imread(&#x27;path&#x27;)def showImageRed(self): self.image_1 = self.image self.image_1 = QtGui.QImage(self.image_1.data, self.image_1.shape[1],self.image_1.shape[0],QtGui.QImage.Format_RGB888).rgbSwapped() self.label_3.setPixmap(QtGui.QPixmap.fromImage(self.image_1)) 第三种方法可能会有斜影子，修改成下方这样 1234def showImageRed(self): self.image_1 = self.image self.image_1 = QtGui.QImage(self.image_1.data, self.image_1.shape[1], self.image_1.shape[0],self.image_1.shape[1]*3, QtGui.QImage.Format_RGB888).rgbSwapped() self.label_3.setPixmap(QtGui.QPixmap.fromImage(self.image_1)) 感觉应该是三通道问题","categories":[{"name":"2022","slug":"2022","permalink":"http://example.com/categories/2022/"}],"tags":[{"name":"PyQt5","slug":"PyQt5","permalink":"http://example.com/tags/PyQt5/"}]},{"title":"Hello World","slug":"hello-world","date":"2023-02-23T14:17:31.624Z","updated":"2023-02-06T13:37:47.659Z","comments":true,"path":"2023/02/23/hello-world/","link":"","permalink":"http://example.com/2023/02/23/hello-world/","excerpt":"hello","text":"hello Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"maven 找不到依赖项 javax.servlet:servlet-api:${servlet-api.version}","slug":"maven","date":"2023-02-23T14:17:31.624Z","updated":"2023-02-23T14:10:17.356Z","comments":true,"path":"2023/02/23/maven/","link":"","permalink":"http://example.com/2023/02/23/maven/","excerpt":"找不到依赖项 javax.servlet:servlet-api:${servlet-api.version}1.下载maven百度","text":"找不到依赖项 javax.servlet:servlet-api:${servlet-api.version}1.下载maven百度 2.maven仓库查找 https://mvnrepository.com/ 直接搜索 比如 直接搜索 然后 点击之后往下移动 找到这一行 贴到pom.xml文件里 坐标组成 配置本地仓库 中央仓库 id唯一标识符，用来区分不同的mirror元素 mirrorOf代替哪个仓库 url镜像的URL","categories":[{"name":"2023","slug":"2023","permalink":"http://example.com/categories/2023/"}],"tags":[{"name":"maven","slug":"maven","permalink":"http://example.com/tags/maven/"}]},{"title":"mysql报错ERROR 1045 (28000) Access denied for user 'root'@'localhost' (using password:NO)","slug":"mysql启动","date":"2023-02-23T14:17:31.624Z","updated":"2023-02-23T14:12:54.315Z","comments":true,"path":"2023/02/23/mysql启动/","link":"","permalink":"http://example.com/2023/02/23/mysql%E5%90%AF%E5%8A%A8/","excerpt":"ERROR 1045 (28000): Access denied for user ‘root‘@’localhost’ (using password: NO)","text":"ERROR 1045 (28000): Access denied for user ‘root‘@’localhost’ (using password: NO) E:\\jeecg\\jeecg-boot-master\\db\\jeecgboot-mysql-5.7.sql","categories":[{"name":"2023","slug":"2023","permalink":"http://example.com/categories/2023/"}],"tags":[{"name":"mysql","slug":"mysql","permalink":"http://example.com/tags/mysql/"}]},{"title":"npm install 包，没有报错，提示安装成功，但是项目中没有出现node_modules也没有安装的包","slug":"npm npm install hexo-cli -g","date":"2023-02-23T14:17:31.624Z","updated":"2023-03-01T07:07:25.030Z","comments":true,"path":"2023/02/23/npm npm install hexo-cli -g/","link":"","permalink":"http://example.com/2023/02/23/npm%20npm%20install%20hexo-cli%20-g/","excerpt":"npm install 包，没有报错，提示安装成功，但是项目中没有出现node_modules也没有安装的包1npm install hexo-cli -g","text":"npm install 包，没有报错，提示安装成功，但是项目中没有出现node_modules也没有安装的包1npm install hexo-cli -g 在当前文件夹目录下npm安装 hexo-cli -g 在当前文件夹不显示 因为这是全局安装 所以会跑到node.js文件夹目录底下 去这边找会发现一个hexo-cli的文件夹 点击这个博客[https://blog.csdn.net/qq_38613992/article/details/103769192] 查看npm的配置 1npm config list 一开始我是没有global&#x3D;？？？ 的 2.查看全局下，是否有自己安装的包 123npm root -g//获取到全局安装目录 一般看上面那个F盘的图，会在那里 3.修改npm配置信息，查看 图例1，global属性是否安装到全局，如果你的这里是true，那么，就算你安装一个包时，没有写-g，它也会自动将你的包安装到全局！ — 修改配置信息 方法一：命令行输入 123npm config set global=false，npm config set global=false 再次查看配置，确认是否修改 1npm config list 然后再 1npm install hexo-cli 后面不要-g就会在自己的文件夹里出现node_moudle了 你可以试试有-g的&#96;&#96;&#96;npm install hexo-cli&#96;&#96;，这样的话，就又会跑到node.js的global的moudle的文件夹里了 安装完成，如图","categories":[{"name":"2023","slug":"2023","permalink":"http://example.com/categories/2023/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://example.com/tags/hexo/"}]},{"title":"PyQt5","slug":"pyqt5","date":"2023-02-23T14:17:31.624Z","updated":"2023-02-23T14:03:21.742Z","comments":true,"path":"2023/02/23/pyqt5/","link":"","permalink":"http://example.com/2023/02/23/pyqt5/","excerpt":"安装PyQt5打开Anaconda Promt，切换到对应环境输入：","text":"安装PyQt5打开Anaconda Promt，切换到对应环境输入： 1pip install PyQt5 -i https://pypi.douban.com/simple 安装PyQt5-tools 12pip install PyQt5-tools -i https://pypi.douban.com/simple 打开 Anaconda prompt 输入: 1PyQt5-tools designer 它有很多东西 1234designerinstalluicqmlsceneqmltestrunner 不知道其他是啥（待解决） 直接点击创建（main window） 随便拖两个button上去 另存为 然后回到anaconda那个窗口， 我们要把这个.ui文件转化为py文件 方法一： 1python -m PyQt5.uic.pyuic test.ui -o test.py 要切换到相对应的文件夹路径下再运行 已经生成了 方法二： 太烦了，不写 F:\\anaconda\\EMPYTY\\pkgs\\pyqt-5.9.2-py39hd77b12b_6\\Library\\bin 大概在这个路径里面 很鸡肋，虽然写的前面的那玩意少了点，但是要吧ui移到当前文件夹里面，辣鸡 1pyuic5 test.ui -o test.py 方法三：直接使用扩展程序打开 pycharm扩展程序（vscode没找到在哪） 不太好搞（不想写，没看懂） 综上，用方法一 1.水平布局 回到vscode里面 123456789101112131415import sysimport shuipingfrom PyQt5.QtWidgets import QApplication,QMainWindow#创建QApplication类的实例app=QApplication(sys.argv)#创建一个窗口mainWindow=QMainWindow()#向主窗口添加控件ui=shuiping.Ui_MainWindow()ui.setupUi(mainWindow)# 显示窗口mainWindow.show()# 进入程序的主循环、并通过exit函数确保主循环安全结束sys.exit(app.exec_()) 表单布局 垂直布局 栅格布局 尺寸策略 伙伴关系 tab顺序 编辑信号和槽","categories":[{"name":"2022","slug":"2022","permalink":"http://example.com/categories/2022/"}],"tags":[{"name":"PyQt5","slug":"PyQt5","permalink":"http://example.com/tags/PyQt5/"}]},{"title":"之前的博客慢慢再修复，先把最近的东西放上来，sos！","slug":"breautiful","date":"2023-02-23T14:17:31.609Z","updated":"2023-02-23T13:41:12.493Z","comments":true,"path":"2023/02/23/breautiful/","link":"","permalink":"http://example.com/2023/02/23/breautiful/","excerpt":"","text":"之前的博客慢慢再修复，先把最近的东西放上来，sos！","categories":[{"name":"2023","slug":"2023","permalink":"http://example.com/categories/2023/"}],"tags":[{"name":"casual_talk","slug":"casual-talk","permalink":"http://example.com/tags/casual-talk/"}]},{"title":"C++文件操作之freopen","slug":"C++文件操作之freopen","date":"2023-02-23T14:17:31.609Z","updated":"2023-02-23T13:51:59.659Z","comments":true,"path":"2023/02/23/C++文件操作之freopen/","link":"","permalink":"http://example.com/2023/02/23/C++%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C%E4%B9%8Bfreopen/","excerpt":"C++文件操作之freopen","text":"C++文件操作之freopen 12freopen(&quot;xxx.in&quot;,&quot;r&quot;,stdin); //输入文件freopen(&quot;xxx.out&quot;,&quot;w&quot;,stdout); //输出文件 1234567891011121314#include&lt;cstdio&gt;#include&lt;iostream&gt;using namespace std;int main()&#123; freopen(&quot;a+b.in&quot;,&quot;r&quot;,stdin); freopen(&quot;a+b.out&quot;,&quot;w&quot;,stdout); //以上是模板 int a,b; cin&gt;&gt;a&gt;&gt;b; cout&lt;&lt;a+b&lt;&lt;endl; return 0;&#125;","categories":[{"name":"2023","slug":"2023","permalink":"http://example.com/categories/2023/"}],"tags":[{"name":"c++","slug":"c","permalink":"http://example.com/tags/c/"}]},{"title":"Failed to scan","slug":"Failed to scan [fileFmavenrepositoryorgspringframeworkspring-aspects5","date":"2023-02-23T14:17:31.609Z","updated":"2023-02-23T13:53:39.577Z","comments":true,"path":"2023/02/23/Failed to scan [fileFmavenrepositoryorgspringframeworkspring-aspects5/","link":"","permalink":"http://example.com/2023/02/23/Failed%20to%20scan%20[fileFmavenrepositoryorgspringframeworkspring-aspects5/","excerpt":"Failed to scan [file:&#x2F;F:&#x2F;maven&#x2F;repository&#x2F;org&#x2F;springframework&#x2F;spring-aspects&#x2F;5.1.9.RELEASE&#x2F;spring-aspects-5.1.9.RELEASE.jar] from classloader hierarchyjava.util.zip.ZipException: error in opening zip file","text":"Failed to scan [file:&#x2F;F:&#x2F;maven&#x2F;repository&#x2F;org&#x2F;springframework&#x2F;spring-aspects&#x2F;5.1.9.RELEASE&#x2F;spring-aspects-5.1.9.RELEASE.jar] from classloader hierarchyjava.util.zip.ZipException: error in opening zip file 1mvn install:install-file -DgroupId=com.qiyuesuo.sdk -DartifactId=sdk-java -Dversion=3.4.1 -Dpackaging=jar -Dfile=D:\\jar\\sdk-java-3.4.1.jar 1F:\\maven\\repository\\org\\springframework\\spring-aspects\\5.1.9.RELEASE org.springframework.spring-aspects 12mvn install:install-file -DgroupId=org.springframework.spring-aspects-DartifactId=spring-aspects -Dversion=5.3.1 -Dpackaging=jar -Dfile=F:\\maven\\spring-aspects-5.3.1.jar mvn install:install-file -DgroupId&#x3D;org.springframework.spring-aspects-DartifactId&#x3D;spring-aspects -Dversion&#x3D;5.3.1 -Dpackaging&#x3D;jar -Dfile&#x3D;F:\\maven\\spring-aspects-5.3.1.jar","categories":[{"name":"2023","slug":"2023","permalink":"http://example.com/categories/2023/"}],"tags":[{"name":"maven","slug":"maven","permalink":"http://example.com/tags/maven/"}]}],"categories":[{"name":"2023","slug":"2023","permalink":"http://example.com/categories/2023/"},{"name":"2022","slug":"2022","permalink":"http://example.com/categories/2022/"}],"tags":[{"name":"casual_talk","slug":"casual-talk","permalink":"http://example.com/tags/casual-talk/"},{"name":"django","slug":"django","permalink":"http://example.com/tags/django/"},{"name":"powershell","slug":"powershell","permalink":"http://example.com/tags/powershell/"},{"name":"anaconda","slug":"anaconda","permalink":"http://example.com/tags/anaconda/"},{"name":"js","slug":"js","permalink":"http://example.com/tags/js/"},{"name":"reat","slug":"reat","permalink":"http://example.com/tags/reat/"},{"name":"hexo","slug":"hexo","permalink":"http://example.com/tags/hexo/"},{"name":"PyQt5","slug":"PyQt5","permalink":"http://example.com/tags/PyQt5/"},{"name":"maven","slug":"maven","permalink":"http://example.com/tags/maven/"},{"name":"mysql","slug":"mysql","permalink":"http://example.com/tags/mysql/"},{"name":"c++","slug":"c","permalink":"http://example.com/tags/c/"}]}