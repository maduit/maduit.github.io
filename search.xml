<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>2月开学总结</title>
      <link href="/2023/03/01/2%E6%9C%88%E5%BC%80%E5%AD%A6%E6%80%BB%E7%BB%93/"/>
      <url>/2023/03/01/2%E6%9C%88%E5%BC%80%E5%AD%A6%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h3 id="2月开学总结"><a href="#2月开学总结" class="headerlink" title="2月开学总结"></a>2月开学总结</h3><span id="more"></span><ol><li>每日200单词，真的坚持不下来（我妈说过一句老话：新的马桶只有三天是香的）</li><li>周五-周日每日50页django目前停滞（p117），在后渲前的简单<code>&#123;&#123;&#125;&#125;</code>不清楚具体语法，有时间看b具体简单讲解，我实在无法理解，这种书怎么出版的，前20页每页都有错误，这个人抄官方文档都能抄错？？？？！！！</li><li>问了师姐她复习进度，四月之前（include四月）刷完1800,以及师姐说英二难度比江苏高考英语难度小</li><li>临时接了挑战杯的复赛答辩，要准备讲演稿子</li><li>目前数学进度第一章（第一遍做不到不看视频（看视频时真的费时间），但已经都忘了（为什么上学期我要拒绝高数老师让我做她的助教（扇自己耳光）））</li><li>英语6级太难了</li><li>准备算法考试</li><li>所有的东西并行真的做不到，一天只能选一个（上周多线程进行复习&amp;&amp;学习，效率极低）</li><li>佛山顺德愿望get</li><li>实验室老师开始整幺蛾子了：周四下午7、8节加了一节选修课。明天去一节看看情况，不行就退实验室;以及未来一个月内实验室搬迁，不行就退。</li><li>昨天去交材料，党建的辅导老师说：好久没看见你了，你最近在干嘛。<br>  我：准备考研，和实验室的东西。<br>  老师:你准备考研的话要平衡比赛和考研准备的东西<br>  老师:考研的书差不多要买了<br>  我：嗯嗯<br>12.仰天长叹，下个月三场考试，4月份一轮，师姐说828要在这学期内过完，操作系统跟着这学期的老师好好学一遍，就没什么问题，我真的能平衡吗……实验室感觉差不多可以退了，但又想拼一把计算机设计大赛，自己再做个东西出来……</li></ol><p><a href="https://www.emojicopy.com/">emoji</a></p><p><a href="https://www.huntsbot.com/qa/9raM">format</a></p><img src="\images\dayliy_image\3.1.1.jpg" alt="drawing" width="200"/><p><a href="https://blog.csdn.net/Calvin_zhou/article/details/109303640?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522167765384916782427491388%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&request_id=167765384916782427491388&biz_id=0&utm_medium=distribute.pc_chrome_plugin_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-2-109303640-null-null.nonecase&utm_term=%20=====%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20Context%20Dump%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20=====%20%20%20%20%20===%20(line%20number%20probably%20different%20from%20source)%20===&spm=1018.2226.3001.4187">本来想花15min解决的note，花了1个小时的原因窒息</a><br><img src="/%5Cimages%5Cdayliy_image%5C3.1.2.png" alt="1669786706325"></p>]]></content>
      
      
      <categories>
          
          <category> 2023 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> casual_talk </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Import pymysql could not be resolved from.md</title>
      <link href="/2023/02/26/Import%20pymysql%20could%20not%20be%20resolved%20from/"/>
      <url>/2023/02/26/Import%20pymysql%20could%20not%20be%20resolved%20from/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><p><img src="/%5Cimages%5Canaconda%5C3.png" alt="1677241477982"></p><p>Import “pymysql” could not be resolved from </p><p><img src="E:\BLOG\blog1\source\images\anaconda\4.png" alt="1677241534025"></p><p>在anaconda里面装一个</p><p>首先先切进django的虚拟环境里面</p><p>  在Anaconda中，可以通过使用conda命令来创建和管理虚拟环境。要切换已创建的虚拟环境，可以使用以下命令：</p><ol><li>列出已有环境：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda info --envs</span><br></pre></td></tr></table></figure><ol start="2"><li>激活目标环境：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda activate &lt;env_name&gt;</span><br></pre></td></tr></table></figure><p>这里<code>&lt;env_name&gt;</code>是你想要激活的虚拟环境的名称。激活环境后，你可以在该环境中使用安装的软件包和工具。</p><ol start="3"><li>取消激活当前环境：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda deactivate</span><br></pre></td></tr></table></figure><p>这将使当前环境不再处于活动状态，回到默认的基础环境。 </p><p>注意：如果你在使用Anaconda Navigator，也可以通过选择“Environments”选项卡，然后单击目标环境的名称来激活虚拟环境。  </p><p><code>conda install pymysql</code></p><p>看你anaconda用的是什么源，国内的记得关闭魔法上网工具</p>]]></content>
      
      
      <categories>
          
          <category> 2023 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>官方文档</title>
      <link href="/2023/02/24/null%C2%B6/"/>
      <url>/2023/02/24/null%C2%B6/</url>
      
        <content type="html"><![CDATA[<p><a href="https://stackoverflow.com/questions/19428572/django-templatesyntaxerror-could-not-parse-the-remainder">https://stackoverflow.com/questions/19428572/django-templatesyntaxerror-could-not-parse-the-remainder</a></p><span id="more"></span><p>模型字段参考</p><p>字段选项</p><p><a href="https://docs.djangoproject.com/zh-hans/4.1/ref/models/fields/#validators">https://docs.djangoproject.com/zh-hans/4.1/ref/models/fields/#validators</a></p><p>以下参数对所以字段类型均有效，且是可选的。</p><h3 id="null¶"><a href="#null¶" class="headerlink" title="null¶"></a><code>null</code><a href="https://docs.djangoproject.com/zh-hans/4.1/ref/models/fields/#null">¶</a></h3><ul><li><code>Field.``null</code><a href="https://docs.djangoproject.com/zh-hans/4.1/ref/models/fields/#django.db.models.Field.null">¶</a></li></ul><p>如果是 <code>True</code>， Django 将在数据库中存储空值为 <code>NULL</code>。默认为 <code>False</code>。</p><p>避免在基于字符串的字段上使用 <a href="https://docs.djangoproject.com/zh-hans/4.1/ref/models/fields/#django.db.models.Field.null"><code>null</code></a>，如 <a href="https://docs.djangoproject.com/zh-hans/4.1/ref/models/fields/#django.db.models.CharField"><code>CharField</code></a> 和 <a href="https://docs.djangoproject.com/zh-hans/4.1/ref/models/fields/#django.db.models.TextField"><code>TextField</code></a>。如果一个基于字符串的字段有 <code>null=True</code>，这意味着它有两种可能的“无数据”值。<code>NULL</code>，和空字符串。在大多数情况下，“无数据”有两种可能的值是多余的，Django 的惯例是使用空字符串，而不是 <code>NULL</code>。一个例外是当一个 <a href="https://docs.djangoproject.com/zh-hans/4.1/ref/models/fields/#django.db.models.CharField"><code>CharField</code></a> 同时设置了 <code>unique=True</code> 和 <code>blank=True</code>。在这种情况下，<code>null=True</code> 是需要的，以避免在保存具有空白值的多个对象时违反唯一约束。</p><p>无论是基于字符串的字段还是非字符串的字段，如果希望在表单中允许空值，还需要设置 <code>blank=True</code>，因为 <a href="https://docs.djangoproject.com/zh-hans/4.1/ref/models/fields/#django.db.models.Field.null"><code>null</code></a> 参数只影响数据库的存储（参见 <a href="https://docs.djangoproject.com/zh-hans/4.1/ref/models/fields/#django.db.models.Field.blank"><code>blank</code></a> ）。</p>]]></content>
      
      
      <categories>
          
          <category> 2023 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Module &quot;django.contrib.sessions.serializers&quot; does not define a &quot;PicleSerializer&quot; attribute/class</title>
      <link href="/2023/02/24/Module%20django.contrib.sessions.serializers%20does%20not%20define%20a%20PicleSerializer%20attributeclass/"/>
      <url>/2023/02/24/Module%20django.contrib.sessions.serializers%20does%20not%20define%20a%20PicleSerializer%20attributeclass/</url>
      
        <content type="html"><![CDATA[<h1 id="Module-“django-contrib-sessions-serializers”-does-not-define-a-“PicleSerializer”-attribute-x2F-class"><a href="#Module-“django-contrib-sessions-serializers”-does-not-define-a-“PicleSerializer”-attribute-x2F-class" class="headerlink" title="Module “django.contrib.sessions.serializers” does not define a “PicleSerializer” attribute&#x2F;class"></a>Module “django.contrib.sessions.serializers” does not define a “PicleSerializer” attribute&#x2F;class</h1><span id="more"></span><p>是这本书打错了hhhh</p><p><a href="https://docs.djangoproject.com/zh-hans/4.1/topics/http/sessions/">https://docs.djangoproject.com/zh-hans/4.1/topics/http/sessions/</a></p><p>在这里ctrl+F找</p><p><strong>serializers</strong></p><p>最后一个</p><p><code>serializers.``PickleSerializer</code></p><p>tmd是这个玩意儿！</p><p>不是picle睡觉哦pick</p><p>服了这个写书的老六！</p>]]></content>
      
      
      <categories>
          
          <category> 2023 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> django </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>无法加载文件C:\Users\xxx\Documents\WindowsPowerShell\profile.ps1</title>
      <link href="/2023/02/24/%E6%97%A0%E6%B3%95%E5%8A%A0%E8%BD%BD%E6%96%87%E4%BB%B6CUsersxxxDocumentsWindowsPowerShellprofile.ps1%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%9C%A8%E6%AD%A4%E7%B3%BB%E7%BB%9F%E4%B8%8A%E7%A6%81%E6%AD%A2%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC/"/>
      <url>/2023/02/24/%E6%97%A0%E6%B3%95%E5%8A%A0%E8%BD%BD%E6%96%87%E4%BB%B6CUsersxxxDocumentsWindowsPowerShellprofile.ps1%EF%BC%8C%E5%9B%A0%E4%B8%BA%E5%9C%A8%E6%AD%A4%E7%B3%BB%E7%BB%9F%E4%B8%8A%E7%A6%81%E6%AD%A2%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<h1 id="无法加载文件C-Users-xxx-Documents-WindowsPowerShell-profile-ps1，因为在此系统上禁止运行脚本"><a href="#无法加载文件C-Users-xxx-Documents-WindowsPowerShell-profile-ps1，因为在此系统上禁止运行脚本" class="headerlink" title="无法加载文件C:\Users\xxx\Documents\WindowsPowerShell\profile.ps1，因为在此系统上禁止运行脚本"></a>无法加载文件C:\Users\xxx\Documents\WindowsPowerShell\profile.ps1，因为在此系统上禁止运行脚本</h1><span id="more"></span><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>打开 PowerShell 提示如下报错信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Windows PowerShell</span><br><span class="line">版权所有（C） Microsoft Corporation。保留所有权利。</span><br><span class="line"></span><br><span class="line">安装最新的 PowerShell，了解新功能和改进！https://aka.ms/PSWindows</span><br><span class="line"></span><br><span class="line">. : 无法加载文件 C:\Users\87897\Documents\WindowsPowerShell\profile.ps1，因为在此系统上禁止运行脚本。有关详细信息，请参</span><br><span class="line">阅 https:/go.microsoft.com/fwlink/?LinkID=135170 中的 about_Execution_Policies。</span><br><span class="line">所在位置 行:1 字符: 3</span><br><span class="line">+ . &#x27;C:\Users\87897\Documents\WindowsPowerShell\profile.ps1&#x27;</span><br><span class="line">+   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">    + CategoryInfo          : SecurityError: (:) []，PSSecurityException</span><br><span class="line">1234567891011</span><br></pre></td></tr></table></figure><h2 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析"></a>原因分析</h2><p>输入 <code>get-ExecutionPolicy</code> 输出 <code>Restricted</code>，即脚本执行策略受限。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Windows\system32&gt; get-ExecutionPolicy</span><br><span class="line">Restricted</span><br><span class="line">12</span><br></pre></td></tr></table></figure><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>更换脚本执行策略：<code>set-ExecutionPolicy RemoteSigned</code>，然后输入 <code>Y</code>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Windows\system32&gt; set-ExecutionPolicy RemoteSigned</span><br><span class="line"></span><br><span class="line">执行策略更改</span><br><span class="line">执行策略可帮助你防止执行不信任的脚本。更改执行策略可能会产生安全风险，如 https:/go.microsoft.com/fwlink/?LinkID=135170</span><br><span class="line">中的 about_Execution_Policies 帮助主题所述。是否要更改执行策略?</span><br><span class="line">[Y] 是(Y)  [A] 全是(A)  [N] 否(N)  [L] 全否(L)  [S] 暂停(S)  [?] 帮助 (默认值为“N”): Y</span><br><span class="line">123456</span><br></pre></td></tr></table></figure><p>更换完成后，再次使用命令 <code>get-ExecutionPolicy</code> 查看脚本执行策略。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Windows\system32&gt; get-ExecutionPolicy</span><br><span class="line">RemoteSigned</span><br><span class="line">12</span><br></pre></td></tr></table></figure><p>可以发现已经更改了。问题完美解决，over~~😊</p>]]></content>
      
      
      <categories>
          
          <category> 2023 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> powershell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>anaconda安装其他东西</title>
      <link href="/2023/02/24/Win10%E4%B8%8BAnaconda%E4%BD%BF%E7%94%A8conda%20activate%E6%8A%A5%E9%94%99Your%20shell%20has%20not%20been%20properly%20configured%20to%20use%20&#39;conda%20activate&#39;/"/>
      <url>/2023/02/24/Win10%E4%B8%8BAnaconda%E4%BD%BF%E7%94%A8conda%20activate%E6%8A%A5%E9%94%99Your%20shell%20has%20not%20been%20properly%20configured%20to%20use%20&#39;conda%20activate&#39;/</url>
      
        <content type="html"><![CDATA[<h1 id="Win10下Anaconda使用conda-activate报错Your-shell-has-not-been-properly-configured-to-use-‘conda-activate’"><a href="#Win10下Anaconda使用conda-activate报错Your-shell-has-not-been-properly-configured-to-use-‘conda-activate’" class="headerlink" title="Win10下Anaconda使用conda activate报错Your shell has not been properly configured to use ‘conda activate’"></a>Win10下Anaconda使用conda activate报错Your shell has not been properly configured to use ‘conda activate’</h1><p><img src="/images/anaconda/1.png" alt="1677212390344"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">PS E:\dijango&gt; conda activate base</span><br><span class="line"></span><br><span class="line">CommandNotFoundError: Your shell has not been properly configured to use &#x27;conda activate&#x27;.</span><br><span class="line">If using &#x27;conda activate&#x27; from a batch script, change your</span><br><span class="line">invocation to &#x27;CALL conda.bat activate&#x27;.</span><br><span class="line">To initialize your shell, run</span><br><span class="line">    $ conda init &lt;SHELL_NAME&gt;</span><br><span class="line"></span><br><span class="line">Currently supported shells are:</span><br><span class="line"></span><br><span class="line">- bash</span><br><span class="line">- cmd.exe</span><br><span class="line">- fish</span><br><span class="line">- tcsh</span><br><span class="line">- xonsh</span><br><span class="line">- zsh</span><br><span class="line">- powershell</span><br><span class="line"></span><br><span class="line">See &#x27;conda init --help&#x27; for more information and options.</span><br><span class="line"></span><br><span class="line">IMPORTANT: You may need to close and restart your shell after running &#x27;conda init&#x27;.</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>先以管理员身份打开cmd。<br>试一下conda activate 环境名称。<br>如果命令行提示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Your shell has not been properly configured to use ‘conda activate’.</span><br></pre></td></tr></table></figure><p>然后下面还提示</p><p><code>conda init &lt;SHELL NAME&gt;</code></p><p>就按照他的要求，输入一下</p><p><code>conda init cmd.exe</code></p><p>或者</p><p><code>conda init powershell</code></p><p>这两条都试试，回车，重启cmd说不定就好了。反正我好了。<br><img src="/images/anaconda/2.png" alt="1677212587799"></p>]]></content>
      
      
      <categories>
          
          <category> 2023 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> anaconda </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>闭包</title>
      <link href="/2023/02/23/%E9%97%AD%E5%8C%85/"/>
      <url>/2023/02/23/%E9%97%AD%E5%8C%85/</url>
      
        <content type="html"><![CDATA[<p><strong>闭包</strong></p><span id="more"></span><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.污染环境的全局变量实现函数执行一次次数减一</span></span><br><span class="line">    <span class="keyword">var</span> a=<span class="number">10</span>;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">fa</span>(<span class="params"></span>)&#123;</span><br><span class="line">        a--;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(a);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 2.那就换成局部变量试试</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">fb</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">var</span> a=<span class="number">10</span>;</span><br><span class="line">        a--;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(a);</span><br><span class="line">    &#125;<span class="comment">/*它居然不动了*/</span></span><br><span class="line">    <span class="comment">// 3.闭包</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">fc</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">let</span> a=<span class="number">10</span>;</span><br><span class="line">        <span class="keyword">function</span> <span class="title function_">fd</span>(<span class="params"></span>)&#123;</span><br><span class="line">            a--;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(a);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> fd;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> fm=<span class="title function_">fc</span>();<span class="comment">//完成这句才算闭包</span></span><br><span class="line">    <span class="comment">// 总结</span></span><br><span class="line">    <span class="comment">// 1.有嵌套函数</span></span><br><span class="line">    <span class="comment">// 2.内部函数引用外部作用域</span></span><br><span class="line">    <span class="comment">// 3.返回值是函数</span></span><br><span class="line">    <span class="comment">// 4.船舰一个对象函数，让其长期驻留</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 2022 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>reat-router</title>
      <link href="/2023/02/23/router/"/>
      <url>/2023/02/23/router/</url>
      
        <content type="html"><![CDATA[<p>随意使用您选择的打包器，例如 <a href="https://create-react-app.dev/">Create React App</a> </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx create-react-app router-tutorial</span><br></pre></td></tr></table></figure><span id="more"></span><p>然后安装 React Router 依赖项：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd router-tutorial</span><br><span class="line">npm install react-router-dom@6 history@5</span><br></pre></td></tr></table></figure><p><img src="/images/router/1.png" alt="1668929643220"></p><p>然后编辑你的App.js，让它变得很无聊:</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Bookkeeper!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后，确认<code>index.js</code> or <code>main.jsx</code>（取决于你的打包工具）是可用的：</p><p>root渲染App</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; render &#125; <span class="keyword">from</span> <span class="string">&quot;react-dom&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&quot;./App&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> rootElement = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;root&quot;</span>);</span><br><span class="line"><span class="title function_">render</span>(<span class="language-xml"><span class="tag">&lt;<span class="name">App</span> /&gt;</span></span>, rootElement);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/images/router/2.png" alt="1668929879392"></p><p>然后是删了一点东西</p><p><img src="/images/router/3.png" alt="1668930704957"></p><p>启动您的React应用：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm start</span><br></pre></td></tr></table></figure><h2 id="连接路由"><a href="#连接路由" class="headerlink" title="连接路由"></a>连接路由</h2><p>首先，我们想把你的应用连接到路由: import ‘ BrowserRouter ‘，并用它包裹你的整个应用。(修改index.js)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">import &#123; render &#125; from &quot;react-dom&quot;;</span><br><span class="line">import &#123; BrowserRouter &#125; from &quot;react-router-dom&quot;;</span><br><span class="line">import App from &quot;./App&quot;;</span><br><span class="line"></span><br><span class="line">const rootElement = document.getElementById(&quot;root&quot;);</span><br><span class="line">render(</span><br><span class="line">  &lt;BrowserRouter&gt;</span><br><span class="line">    &lt;App /&gt;</span><br><span class="line">  &lt;/BrowserRouter&gt;,</span><br><span class="line">  rootElement</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>应用程序中没有任何变化，但现在我们已准备好开始处理路由。</p><h2 id="添加一些链接"><a href="#添加一些链接" class="headerlink" title="添加一些链接"></a>添加一些链接</h2><p>打开 src&#x2F;App.js、导入 Link 并添加一些全局导航。注：在本教程中不要对待样式太认真，我们只是为了方便而使用内联样式，你可以根据需要设置样式。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Link</span> &#125; <span class="keyword">from</span> <span class="string">&quot;react-router-dom&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Bookkeeper<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">nav</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">style</span>=<span class="string">&#123;&#123;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">borderBottom:</span> &quot;<span class="attr">solid</span> <span class="attr">1px</span>&quot;,</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">paddingBottom:</span> &quot;<span class="attr">1rem</span>&quot;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &#125;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">      &gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Link</span> <span class="attr">to</span>=<span class="string">&quot;/invoices&quot;</span>&gt;</span>Invoices<span class="tag">&lt;/<span class="name">Link</span>&gt;</span> |&#123;&quot; &quot;&#125;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">Link</span> <span class="attr">to</span>=<span class="string">&quot;/expenses&quot;</span>&gt;</span>Expenses<span class="tag">&lt;/<span class="name">Link</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/router/4.png" alt="1668930664190"></p><p><img src="/images/router/5.png" alt="1668930753632"></p><p>单击链接和后退&#x2F;前进按钮。React Router 现在正在控制 URL！</p><p>我们还没有在 URL 更改时呈现任何路由，但 Link 可以更改 URL，而不会导致整个页面重新加载。</p><h2 id="添加一些路由"><a href="#添加一些路由" class="headerlink" title="添加一些路由"></a>添加一些路由</h2><p>添加几个新文件：</p><ul><li><p><code>src/routes/invoices.jsx</code></p></li><li><p><code>src/routes/expenses.jsx</code></p><p>(文件的位置并不重要，但是当你想要自动生成后端API，服务器渲染，代码分割或者更多的功能时，像这样命名你的文件可以很容易地将这个应用程序移植到其他项目，<a href="https://remix.run/">Remix</a>😉)</p></li></ul><p>现在在文件中加入以下代码：</p><p>expenses.jsx</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">export default function Expenses() &#123;</span><br><span class="line">  return (</span><br><span class="line">    &lt;main style=&#123;&#123; padding: &quot;1rem 0&quot; &#125;&#125;&gt;</span><br><span class="line">      &lt;h2&gt;Expenses&lt;/h2&gt;</span><br><span class="line">    &lt;/main&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>invoices.jsx</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">export default function Invoices() &#123;</span><br><span class="line">  return (</span><br><span class="line">    &lt;main style=&#123;&#123; padding: &quot;1rem 0&quot; &#125;&#125;&gt;</span><br><span class="line">      &lt;h2&gt;Invoices&lt;/h2&gt;</span><br><span class="line">    &lt;/main&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后，让我们通过在<code>main.jsx</code>或者<code>index.js</code> 中创建我们的第一个“路由配置”来让 React Router 在不同的 URL 上呈现我们的界面。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">import &#123; render &#125; from &quot;react-dom&quot;;</span><br><span class="line">import &#123;</span><br><span class="line">  BrowserRouter,</span><br><span class="line">  Routes,</span><br><span class="line">  Route</span><br><span class="line">&#125; from &quot;react-router-dom&quot;;</span><br><span class="line">import App from &quot;./App&quot;;</span><br><span class="line">import Expenses from &quot;./routes/expenses&quot;;</span><br><span class="line">import Invoices from &quot;./routes/invoices&quot;;</span><br><span class="line"></span><br><span class="line">const rootElement = document.getElementById(&quot;root&quot;);</span><br><span class="line">render(</span><br><span class="line">  &lt;BrowserRouter&gt;</span><br><span class="line">    &lt;Routes&gt;</span><br><span class="line">      &lt;Route path=&quot;/&quot; element=&#123;&lt;App /&gt;&#125; /&gt;</span><br><span class="line">      &lt;Route path=&quot;expenses&quot; element=&#123;&lt;Expenses /&gt;&#125; /&gt;</span><br><span class="line">      &lt;Route path=&quot;invoices&quot; element=&#123;&lt;Invoices /&gt;&#125; /&gt;</span><br><span class="line">    &lt;/Routes&gt;</span><br><span class="line">  &lt;/BrowserRouter&gt;,</span><br><span class="line">  rootElement</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>注意：当路由为”&#x2F;“时它渲染App组件，在”&#x2F;invoices”时它渲染Invoices组件。</p><p><img src="/images/router/6.png" alt="1668931415821"></p><p><img src="/images/router/7.png" alt="1668931429768"></p><p><img src="/images/router/8.png" alt="1668931443632"></p><p>所以到这里我们可以看出，点击后会整页都会变换掉</p><h2 id="嵌套路由"><a href="#嵌套路由" class="headerlink" title="嵌套路由"></a>嵌套路由</h2><p>你可能已经注意到，当点击链接时，“App”中的布局会消失。共享布局是一件令人头疼的事情。我们已经知道，大多数UI都是一系列嵌套布局，这些布局总会映射到URL上，所以这个思路被直接植入到React Router中。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">import &#123; render &#125; from &quot;react-dom&quot;;</span><br><span class="line">import &#123;</span><br><span class="line">  BrowserRouter,</span><br><span class="line">  Routes,</span><br><span class="line">  Route</span><br><span class="line">&#125; from &quot;react-router-dom&quot;;</span><br><span class="line">import App from &quot;./App&quot;;</span><br><span class="line">import Expenses from &quot;./routes/expenses&quot;;</span><br><span class="line">import Invoices from &quot;./routes/invoices&quot;;</span><br><span class="line"></span><br><span class="line">const rootElement = document.getElementById(&quot;root&quot;);</span><br><span class="line">render(</span><br><span class="line">  &lt;BrowserRouter&gt;</span><br><span class="line">    &lt;Routes&gt;</span><br><span class="line">      &lt;Route path=&quot;/&quot; element=&#123;&lt;App /&gt;&#125;&gt;</span><br><span class="line">        &lt;Route path=&quot;expenses&quot; element=&#123;&lt;Expenses /&gt;&#125; /&gt;</span><br><span class="line">        &lt;Route path=&quot;invoices&quot; element=&#123;&lt;Invoices /&gt;&#125; /&gt;</span><br><span class="line">      &lt;/Route&gt;</span><br><span class="line">    &lt;/Routes&gt;</span><br><span class="line">  &lt;/BrowserRouter&gt;,</span><br><span class="line">  rootElement</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>当路由有子节点时，它会做两件事：</p><ol><li>它嵌套了 URL (<code>&quot;/&quot; + &quot;expenses&quot;</code> 和 <code>&quot;/&quot; + &quot;invoices&quot;</code>)</li><li>当子路由匹配时，它将嵌套共享布局的 UI 组件：</li></ol><p>但是，为了使（2）生效，我们需要在App.jsx“父”路由中渲染一个</p><p>组件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">import &#123; Outlet, Link &#125; from &quot;react-router-dom&quot;;</span><br><span class="line"></span><br><span class="line">export default function App() &#123;</span><br><span class="line">  return (</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;h1&gt;Bookkeeper&lt;/h1&gt;</span><br><span class="line">      &lt;nav</span><br><span class="line">        style=&#123;&#123;</span><br><span class="line">          borderBottom: &quot;solid 1px&quot;,</span><br><span class="line">          paddingBottom: &quot;1rem&quot;</span><br><span class="line">        &#125;&#125;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;Link to=&quot;/invoices&quot;&gt;Invoices&lt;/Link&gt; |&#123;&quot; &quot;&#125;</span><br><span class="line">        &lt;Link to=&quot;/expenses&quot;&gt;Expenses&lt;/Link&gt;</span><br><span class="line">      &lt;/nav&gt;</span><br><span class="line">      &lt;Outlet /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在再次单击。父路由 ( App.js) 仍然存在，而 <code>&lt;Outlet&gt;</code> 在两个子路由 (<code>&lt;Invoices&gt;</code> 和 <code>&lt;Expenses&gt;</code>)之间切换！ 正如我们稍后将看到的，这适用于路由层次结构的任何级别，并且非常强大。</p><p><img src="/images/router/9.png" alt="1668931972695"></p><p><img src="/images/router/10.png" alt="1668931990946"></p><h2 id="列出发票"><a href="#列出发票" class="headerlink" title="列出发票"></a>列出发票</h2><p>通常你会从某个地方的服务器获取数据，但在本教程中，让我们造一些数据，这样我们就可以专注于路由。</p><p>创建一个文件src&#x2F;data.js并将其复制&#x2F;粘贴到那里：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> invoices = [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;Santa Monica&quot;</span>,</span><br><span class="line">    <span class="attr">number</span>: <span class="number">1995</span>,</span><br><span class="line">    <span class="attr">amount</span>: <span class="string">&quot;$10,800&quot;</span>,</span><br><span class="line">    <span class="attr">due</span>: <span class="string">&quot;12/05/1995&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;Stankonia&quot;</span>,</span><br><span class="line">    <span class="attr">number</span>: <span class="number">2000</span>,</span><br><span class="line">    <span class="attr">amount</span>: <span class="string">&quot;$8,000&quot;</span>,</span><br><span class="line">    <span class="attr">due</span>: <span class="string">&quot;10/31/2000&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;Ocean Avenue&quot;</span>,</span><br><span class="line">    <span class="attr">number</span>: <span class="number">2003</span>,</span><br><span class="line">    <span class="attr">amount</span>: <span class="string">&quot;$9,500&quot;</span>,</span><br><span class="line">    <span class="attr">due</span>: <span class="string">&quot;07/22/2003&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;Tubthumper&quot;</span>,</span><br><span class="line">    <span class="attr">number</span>: <span class="number">1997</span>,</span><br><span class="line">    <span class="attr">amount</span>: <span class="string">&quot;$14,000&quot;</span>,</span><br><span class="line">    <span class="attr">due</span>: <span class="string">&quot;09/01/1997&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;Wide Open Spaces&quot;</span>,</span><br><span class="line">    <span class="attr">number</span>: <span class="number">1998</span>,</span><br><span class="line">    <span class="attr">amount</span>: <span class="string">&quot;$4,600&quot;</span>,</span><br><span class="line">    <span class="attr">due</span>: <span class="string">&quot;01/27/2998&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">getInvoices</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> invoices;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在我们可以在发票路由中使用它。让我们也添加一些样式来获得侧边栏导航布局。随意复制&#x2F;粘贴所有这些，但要特别注意 <code>&lt;Link&gt;</code> 组件需要 to 属性：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">import &#123; Link &#125; from &quot;react-router-dom&quot;;</span><br><span class="line">import &#123; getInvoices &#125; from &quot;../data&quot;;</span><br><span class="line"></span><br><span class="line">export default function Invoices() &#123;</span><br><span class="line">  let invoices = getInvoices();</span><br><span class="line">  return (</span><br><span class="line">    &lt;div style=&#123;&#123; display: &quot;flex&quot; &#125;&#125;&gt;</span><br><span class="line">      &lt;nav</span><br><span class="line">        style=&#123;&#123;</span><br><span class="line">          borderRight: &quot;solid 1px&quot;,</span><br><span class="line">          padding: &quot;1rem&quot;</span><br><span class="line">        &#125;&#125;</span><br><span class="line">      &gt;</span><br><span class="line">        &#123;invoices.map(invoice =&gt; (</span><br><span class="line">          &lt;Link</span><br><span class="line">            style=&#123;&#123; display: &quot;block&quot;, margin: &quot;1rem 0&quot; &#125;&#125;</span><br><span class="line">            to=&#123;`/invoices/$&#123;invoice.number&#125;`&#125;</span><br><span class="line">            key=&#123;invoice.number&#125;</span><br><span class="line">          &gt;</span><br><span class="line">            &#123;invoice.name&#125;</span><br><span class="line">          &lt;/Link&gt;</span><br><span class="line">        ))&#125;</span><br><span class="line">      &lt;/nav&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 2022 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> reat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>匿名函数</title>
      <link href="/2023/02/23/%E5%8C%BF%E5%90%8D%E5%87%BD%E6%95%B0/"/>
      <url>/2023/02/23/%E5%8C%BF%E5%90%8D%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<p><strong>匿名函数</strong></p><span id="more"></span><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.表达式赋值给变量来使用</span></span><br><span class="line"><span class="keyword">var</span> fa =<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">20</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fa</span>();</span><br><span class="line"><span class="comment">// 2.当作函数来被调用</span></span><br><span class="line"><span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">30</span>);&#125;,<span class="number">1000</span>);</span><br><span class="line"><span class="comment">// 3.通过函数嵌套当成闭包里的返回函数来调用</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fb</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">40</span>);&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> fm=<span class="title function_">fb</span>();</span><br><span class="line"><span class="title function_">fm</span>();</span><br><span class="line"><span class="comment">// 4.函数自己调用自己，也就是自调用。</span></span><br><span class="line">!<span class="keyword">function</span>(<span class="params"></span>)&#123;<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">50</span>);&#125;();</span><br><span class="line"><span class="comment">//匿名函数智能被调用或是自调用。</span></span><br><span class="line"><span class="comment">//带参数的匿名函数自调用</span></span><br><span class="line">!<span class="keyword">function</span>(<span class="params">a,b</span>)&#123;<span class="variable language_">console</span>.<span class="title function_">log</span>(a+b);&#125;(<span class="number">40</span>,<span class="number">50</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 2022 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>回调函数</title>
      <link href="/2023/02/23/%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0/"/>
      <url>/2023/02/23/%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<p><em><strong>回调函数</strong></em></p><span id="more"></span><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 先定义一个函数，用来做短时间或无法脱身的事情，同步</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">sdo</span>(<span class="params">does</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(does);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 在定义以恶搞函数，用来做长时间等待的事情，异步</span></span><br><span class="line"><span class="comment">//用回调解决这个问题</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">ldo</span>(<span class="params">doing,callback</span>)&#123;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(doing);</span><br><span class="line">        <span class="title function_">callback</span>(<span class="string">&#x27;吃鸡&#x27;</span>)</span><br><span class="line">    &#125;,<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 接下来要开始迫害只因</span></span><br><span class="line"><span class="title function_">sdo</span>(<span class="string">&#x27;买鸡&#x27;</span>)</span><br><span class="line"><span class="title function_">sdo</span>(<span class="string">&#x27;杀鸡&#x27;</span>)</span><br><span class="line"><span class="title function_">ldo</span>(<span class="string">&#x27;炖鸡&#x27;</span>,sdo)<span class="comment">//===&gt;函数作为参数</span></span><br><span class="line"><span class="comment">// sdo(&#x27;吃鸡&#x27;)</span></span><br><span class="line"><span class="comment">// 会发现不对劲</span></span><br><span class="line">       </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 2022 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>箭头函数</title>
      <link href="/2023/02/23/%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0/"/>
      <url>/2023/02/23/%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<p><strong>箭头函数</strong></p><span id="more"></span><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.箭头函数常见写法</span></span><br><span class="line"><span class="keyword">let</span> <span class="title function_">fun1</span>=(<span class="params">a,b</span>)=&gt;&#123;<span class="keyword">return</span> a+b;&#125;</span><br><span class="line"><span class="comment">// 2.箭头函数没有参数，那么也要写括号</span></span><br><span class="line"><span class="keyword">let</span> <span class="title function_">fun2</span>=(<span class="params"></span>)=&gt;&#123;<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;你好&#x27;</span>);&#125;</span><br><span class="line"><span class="comment">// 3.如果只有一个参数，那么括号可以省略</span></span><br><span class="line"><span class="keyword">let</span> <span class="title function_">fun3</span>=name=&gt;&#123;<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`你好<span class="subst">$&#123;name&#125;</span>`</span>);&#125;</span><br><span class="line"><span class="comment">// 4.如果函数体只有一句执行代码，那么可以省略大括号，同时代码默认会被ruturn出去</span></span><br><span class="line"><span class="keyword">let</span> <span class="title function_">fun4</span>=name=&gt;<span class="string">`你好<span class="subst">$&#123;name&#125;</span>`</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">fun4</span>(<span class="string">&#x27;小明&#x27;</span>));</span><br><span class="line"><span class="comment">// 5.箭头函数没有自己的this，他的this是来自于上层作用域的this</span></span><br><span class="line"> <span class="keyword">let</span> obj=&#123;</span><br><span class="line">    <span class="title function_">fun5</span>(<span class="params"></span>)&#123;<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;fun5:&#x27;</span>,<span class="variable language_">this</span>);&#125;,</span><br><span class="line">    <span class="attr">fun6</span>:<span class="function">()=&gt;</span>&#123;<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;fun6:&#x27;</span>,<span class="variable language_">this</span>);&#125;</span><br><span class="line"> &#125;</span><br><span class="line"> obj.<span class="title function_">fun5</span>();</span><br><span class="line"> obj.<span class="title function_">fun6</span>();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 2022 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> js </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决bash hexo command not found</title>
      <link href="/2023/02/23/%E8%A7%A3%E5%86%B3bash%20hexo%20command%20not%20found/"/>
      <url>/2023/02/23/%E8%A7%A3%E5%86%B3bash%20hexo%20command%20not%20found/</url>
      
        <content type="html"><![CDATA[<h1 id="解决bash-hexo-command-not-found"><a href="#解决bash-hexo-command-not-found" class="headerlink" title="解决bash: hexo: command not found"></a>解决bash: hexo: command not found</h1><span id="more"></span><p>检查 nodejs 和 npm 是否正常，依次输入命令 <code>node -v</code> 和 <code>npm -v</code> 看看是否有相关版本信息</p><!-- more --><p><img src="/images/hexo%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/1.png" alt="1669786706325"></p><p>出现了版本信息就证明 nodejs 和 npm 是没有问题的，那么就应该是环境变量的配置问题了，在【此电脑】右键【属性】，依次选择【高级系统设置】-【环境变量】，选择系统变量 Path，将 <code>node_modules</code> 下的 <code>.bin</code> 文件路径添加到 Path 里面</p><p>注意你的博客目录下应该有两个 <code>node_modules</code> 文件夹</p><p>F:\blog 和F:\blog\BLOG</p><p><img src="/images/hexo%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/2.png" alt="1669786987745"></p><p><img src="/images/hexo%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/3.png" alt="1669787025987"></p><p>我是加了第一个module在环境变量</p><p><img src="/images/hexo%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/4.png" alt="1669787251679"></p><p>别的博主有的加了第二个module</p><p>总之自己试一下按哪个</p><p>环境变量添加好了之后重新打开 git 即可运行 hexo 命令，如果此时仍然无法执行 hexo 命令，那就只能拿出终极绝招了，运行命令 <code>npm install hexo-cli -g</code> 重新安装 hexo 即可！</p>]]></content>
      
      
      <categories>
          
          <category> 2023 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PyQt5显示图片</title>
      <link href="/2023/02/23/PyQt5%E6%98%BE%E7%A4%BA%E5%9B%BE%E7%89%87/"/>
      <url>/2023/02/23/PyQt5%E6%98%BE%E7%A4%BA%E5%9B%BE%E7%89%87/</url>
      
        <content type="html"><![CDATA[<p>PyQt5显示图片</p><span id="more"></span><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">redImg=QImage()</span><br><span class="line">QImage.load(redImg,&#x27;path&#x27;,format=&#x27;png&#x27;)</span><br><span class="line">self.label_3.setPixmap(QtGui.QPixmap(redImg))</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">img_path=&#x27;path&#x27;</span><br><span class="line">self.showImage = QPixmap(img_path).scaled(self.label_3.width(), self.label_3.height())  # 适应窗口大小</span><br><span class="line">self.label_3.setPixmap(self.showImage)  # 显示图片</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">image=cv2.imread(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">showImageRed</span>(<span class="params">self</span>):</span><br><span class="line">self.image_1 = self.image</span><br><span class="line">self.image_1 = QtGui.QImage(self.image_1.data, self.image_1.shape[<span class="number">1</span>],self.image_1.shape[<span class="number">0</span>],QtGui.QImage.Format_RGB888).rgbSwapped()</span><br><span class="line">self.label_3.setPixmap(QtGui.QPixmap.fromImage(self.image_1))</span><br><span class="line"></span><br><span class="line">   </span><br></pre></td></tr></table></figure><p>第三种方法可能会有斜影子，修改成下方这样</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">def showImageRed(self):</span><br><span class="line">    self.image_1 = self.image</span><br><span class="line">    self.image_1 = QtGui.QImage(self.image_1.data, self.image_1.shape[1], self.image_1.shape[0],self.image_1.shape[1]*3, QtGui.QImage.Format_RGB888).rgbSwapped()</span><br><span class="line">    self.label_3.setPixmap(QtGui.QPixmap.fromImage(self.image_1))</span><br></pre></td></tr></table></figure><p>感觉应该是三通道问题</p>]]></content>
      
      
      <categories>
          
          <category> 2022 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PyQt5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/02/23/hello-world/"/>
      <url>/2023/02/23/hello-world/</url>
      
        <content type="html"><![CDATA[<p>hello</p><span id="more"></span><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>maven 找不到依赖项 javax.servlet:servlet-api:${servlet-api.version}</title>
      <link href="/2023/02/23/maven/"/>
      <url>/2023/02/23/maven/</url>
      
        <content type="html"><![CDATA[<h1 id="找不到依赖项-javax-servlet-servlet-api-servlet-api-version"><a href="#找不到依赖项-javax-servlet-servlet-api-servlet-api-version" class="headerlink" title="找不到依赖项 javax.servlet:servlet-api:${servlet-api.version}"></a>找不到依赖项 javax.servlet:servlet-api:${servlet-api.version}</h1><p>1.下载maven百度</p><span id="more"></span><p>2.maven仓库查找</p><p><a href="https://mvnrepository.com/">https://mvnrepository.com/</a></p><p>直接搜索</p><p>比如<br><img src="/images/maven/1.png" alt="1672900140564"></p><p>直接搜索</p><p><img src="/images/maven/2.png" alt="1672900240366"></p><p>然后</p><p><img src="/images/maven/3.png" alt="1672900269701"></p><p>点击之后往下移动</p><p>找到这一行</p><p><img src="/C/images/maven/4.png" alt="1672900285401"></p><p>贴到pom.xml文件里</p><p><img src="/images/maven/5.png" alt="1672983178197"></p><p>坐标组成</p><p><img src="/images/maven/6.png" alt="1672983299156"></p><p>配置本地仓库</p><p><img src="/images/maven/7.png" alt="1672987574149"></p><p><img src="/images/maven/8.png" alt="1672987601115"></p><p>中央仓库</p><p><img src="/images/maven/9.png" alt="1672988046524"></p><p>id唯一标识符，用来区分不同的mirror元素</p><p>mirrorOf代替哪个仓库</p><p>url镜像的URL</p>]]></content>
      
      
      <categories>
          
          <category> 2023 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql报错ERROR 1045 (28000) Access denied for user &#39;root&#39;@&#39;localhost&#39; (using password:NO)</title>
      <link href="/2023/02/23/mysql%E5%90%AF%E5%8A%A8/"/>
      <url>/2023/02/23/mysql%E5%90%AF%E5%8A%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="ERROR-1045-28000-Access-denied-for-user-‘root‘-’localhost’-using-password-NO"><a href="#ERROR-1045-28000-Access-denied-for-user-‘root‘-’localhost’-using-password-NO" class="headerlink" title="ERROR 1045 (28000): Access denied for user ‘root‘@’localhost’ (using password: NO)"></a>ERROR 1045 (28000): Access denied for user ‘root‘@’localhost’ (using password: NO)</h2><span id="more"></span><p><img src="/images/jeecgsql/1.png" alt="1672729110392"></p><p><img src="/images/jeecgsql/2.png" alt="1672729176810"></p><p>E:\jeecg\jeecg-boot-master\db\jeecgboot-mysql-5.7.sql</p>]]></content>
      
      
      <categories>
          
          <category> 2023 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>npm install 包，没有报错，提示安装成功，但是项目中没有出现node_modules也没有安装的包</title>
      <link href="/2023/02/23/npm%20npm%20install%20hexo-cli%20-g/"/>
      <url>/2023/02/23/npm%20npm%20install%20hexo-cli%20-g/</url>
      
        <content type="html"><![CDATA[<h1 id="npm-install-包，没有报错，提示安装成功，但是项目中没有出现node-modules也没有安装的包"><a href="#npm-install-包，没有报错，提示安装成功，但是项目中没有出现node-modules也没有安装的包" class="headerlink" title="npm install 包，没有报错，提示安装成功，但是项目中没有出现node_modules也没有安装的包"></a>npm install 包，没有报错，提示安装成功，但是项目中没有出现node_modules也没有安装的包</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><span id="more"></span><p>在当前文件夹目录下npm安装 hexo-cli -g</p><p>在当前文件夹不显示</p><p>因为这是全局安装</p><p>所以会跑到node.js文件夹目录底下</p><p><img src="/images/hexo%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/5.png" alt="1669790121108"></p><p>去这边找会发现一个hexo-cli的文件夹</p><p>点击这个博客[<a href="https://blog.csdn.net/qq_38613992/article/details/103769192]">https://blog.csdn.net/qq_38613992/article/details/103769192]</a></p><p><strong>查看npm的配置</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config list</span><br></pre></td></tr></table></figure><p>一开始我是没有global&#x3D;？？？ 的</p><p><img src="/images/hexo%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/6.png" alt="npm配置信息"></p><p><strong>2.查看全局下，是否有自己安装的包</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm root -g<span class="comment">//获取到全局安装目录</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>一般看上面那个F盘的图，会在那里</p><p>3.修改npm配置信息，查看 图例1，global属性是否安装到全局，如果你的这里是true，那么，就算你安装一个包时，没有写-g，它也会自动将你的包安装到全局！ — 修改配置信息 方法一：命令行输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm config set global=false，</span><br><span class="line"></span><br><span class="line">npm config set global=false</span><br></pre></td></tr></table></figure><p>再次查看配置，确认是否修改</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config list</span><br></pre></td></tr></table></figure><p><img src="/images/hexo%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/7.png" alt="1669790489536"></p><p>然后再</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli</span><br></pre></td></tr></table></figure><p>后面不要-g就会在自己的文件夹里出现node_moudle了</p><p>你可以试试有-g的&#96;&#96;&#96;npm install hexo-cli&#96;&#96;，这样的话，就又会跑到node.js的global的moudle的文件夹里了</p><p>安装完成，如图</p><p><img src="/images/hexo%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/8.png" alt="1669790709401"></p>]]></content>
      
      
      <categories>
          
          <category> 2023 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PyQt5</title>
      <link href="/2023/02/23/pyqt5/"/>
      <url>/2023/02/23/pyqt5/</url>
      
        <content type="html"><![CDATA[<h2 id="安装PyQt5"><a href="#安装PyQt5" class="headerlink" title="安装PyQt5"></a>安装PyQt5</h2><p>打开Anaconda Promt，切换到对应环境输入：</p><span id="more"></span> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install PyQt5 -i https://pypi.douban.com/simple</span><br></pre></td></tr></table></figure><h2 id="安装PyQt5-tools"><a href="#安装PyQt5-tools" class="headerlink" title="安装PyQt5-tools"></a>安装PyQt5-tools</h2> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install PyQt5-tools -i https://pypi.douban.com/simple</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>打开</p><p>Anaconda prompt</p><p><img src="/./images/pyqt5/1.png" alt="1669202006491"></p><p>输入:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PyQt5-tools designer</span><br></pre></td></tr></table></figure><p>它有很多东西</p><p><img src="/./images/pyqt5/2.png" alt="1669202116133"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">designer</span><br><span class="line">installuic</span><br><span class="line">qmlscene</span><br><span class="line">qmltestrunner</span><br></pre></td></tr></table></figure><p>不知道其他是啥（待解决）</p><hr><p><img src="/./images/pyqt5/3.png" alt="1669202186551"></p><p>直接点击创建（main window）</p><p><img src="/./images/pyqt5/4.png" alt="1669202245388"></p><p>随便拖两个button上去</p><p><img src="/./images/pyqt5/21.png" alt="1669202300112"></p><p>另存为</p><p><img src="/./images/pyqt5/5.png" alt="1669202348711"></p><p>然后回到anaconda那个窗口，</p><p>我们要把这个.ui文件转化为py文件</p><p>方法一：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m PyQt5.uic.pyuic test.ui -o test.py</span><br></pre></td></tr></table></figure><p><img src="/./images/pyqt5/6.png" alt="1669202702551"></p><p>要切换到相对应的文件夹路径下再运行</p><p><img src="/./images/pyqt5/7.png" alt="1669202755853"></p><p>已经生成了</p><p>方法二：</p><p>太烦了，不写</p><p>F:\anaconda\EMPYTY\pkgs\pyqt-5.9.2-py39hd77b12b_6\Library\bin</p><p>大概在这个路径里面</p><p><img src="/./images/pyqt5/7.1.png" alt="1669203475844"></p><p><img src="/./images/pyqt5/7.2.png" alt="1669203905200"></p><p><img src="/./images/pyqt5/7.3.png" alt="1669203924735"></p><p> 很鸡肋，虽然写的前面的那玩意少了点，但是要吧ui移到当前文件夹里面，辣鸡</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyuic5 test.ui -o test.py</span><br></pre></td></tr></table></figure><p>方法三：<br>直接使用扩展程序打开</p><p>pycharm扩展程序（vscode没找到在哪）</p><p><img src="/./images/pyqt5/8.png" alt="1669203187056"></p><p>不太好搞（不想写，没看懂）</p><p>综上，用方法一</p><p>1.水平布局</p><p><img src="/./images/pyqt5/9.png" alt="1669204341946"></p><p><img src="/./images/pyqt5/10.png" alt="1669204535028"></p><p>回到vscode里面</p><p><img src="/./images/pyqt5/11.png" alt="1669204935069"></p><p><img src="/./images/pyqt5/12.png" alt="1669205119299"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> shuiping</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QApplication,QMainWindow</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建QApplication类的实例</span></span><br><span class="line">app=QApplication(sys.argv)</span><br><span class="line"><span class="comment">#创建一个窗口</span></span><br><span class="line">mainWindow=QMainWindow()</span><br><span class="line"><span class="comment">#向主窗口添加控件</span></span><br><span class="line">ui=shuiping.Ui_MainWindow()</span><br><span class="line">ui.setupUi(mainWindow)</span><br><span class="line"><span class="comment"># 显示窗口</span></span><br><span class="line">mainWindow.show()</span><br><span class="line"><span class="comment"># 进入程序的主循环、并通过exit函数确保主循环安全结束</span></span><br><span class="line">sys.exit(app.exec_())</span><br></pre></td></tr></table></figure><p>表单布局</p><p><img src="/./images/pyqt5/13.png" alt="1669206548415"></p><p>垂直布局</p><p><img src="/./images/pyqt5/14.png" alt="1669206597151"></p><p>栅格布局</p><p><img src="/./images/pyqt5/15.png" alt="1669206640854"></p><p>尺寸策略</p><p><img src="/./images/pyqt5/16.png" alt="1669210040330"></p><p>伙伴关系</p><p><img src="/./images/pyqt5/17.png" alt="1669210466222"></p><p>tab顺序</p><p><img src="/./images/pyqt5/18.png" alt="1669210672111"></p><p><img src="/./images/pyqt5/19.png" alt="1669210689346"></p><p>编辑信号和槽</p><p><img src="/./images/pyqt5/22.png" alt="1669211232251"></p><p><img src="/./images/pyqt5/20.png" alt="1669211749552"></p>]]></content>
      
      
      <categories>
          
          <category> 2022 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PyQt5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>之前的博客慢慢再修复，先把最近的东西放上来，sos！</title>
      <link href="/2023/02/23/breautiful/"/>
      <url>/2023/02/23/breautiful/</url>
      
        <content type="html"><![CDATA[<p><img src="/images/saltyfish.png"></p><div style="font-size:40px;color:purple">之前的博客慢慢再修复，先把最近的东西放上来，sos！</div><!-- <div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=39807850&cid=69927212&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"> </iframe></div> -->]]></content>
      
      
      <categories>
          
          <category> 2023 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> casual_talk </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++文件操作之freopen</title>
      <link href="/2023/02/23/C++%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C%E4%B9%8Bfreopen/"/>
      <url>/2023/02/23/C++%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C%E4%B9%8Bfreopen/</url>
      
        <content type="html"><![CDATA[<h1 id="C-文件操作之freopen"><a href="#C-文件操作之freopen" class="headerlink" title="C++文件操作之freopen"></a>C++文件操作之freopen</h1><span id="more"></span><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">freopen(&quot;xxx.in&quot;,&quot;r&quot;,stdin);//输入文件</span><br><span class="line">freopen(&quot;xxx.out&quot;,&quot;w&quot;,stdout);//输出文件</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;cstdio&gt;</span><br><span class="line">#include&lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">freopen(&quot;a+b.in&quot;,&quot;r&quot;,stdin);</span><br><span class="line">freopen(&quot;a+b.out&quot;,&quot;w&quot;,stdout);</span><br><span class="line">//以上是模板</span><br><span class="line">int a,b;</span><br><span class="line">cin&gt;&gt;a&gt;&gt;b;</span><br><span class="line">cout&lt;&lt;a+b&lt;&lt;endl;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 2023 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Failed to scan</title>
      <link href="/2023/02/23/Failed%20to%20scan%20%5BfileFmavenrepositoryorgspringframeworkspring-aspects5/"/>
      <url>/2023/02/23/Failed%20to%20scan%20%5BfileFmavenrepositoryorgspringframeworkspring-aspects5/</url>
      
        <content type="html"><![CDATA[<p> Failed to scan [file:&#x2F;F:&#x2F;maven&#x2F;repository&#x2F;org&#x2F;springframework&#x2F;spring-aspects&#x2F;5.1.9.RELEASE&#x2F;spring-aspects-5.1.9.RELEASE.jar] from classloader hierarchy<br>java.util.zip.ZipException: error in opening zip file</p><span id="more"></span><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn install:install-file -DgroupId=com.qiyuesuo.sdk -DartifactId=sdk-java -Dversion=3.4.1 -Dpackaging=jar -Dfile=D:\jar\sdk-java-3.4.1.jar</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">F:\maven\repository\org\springframework\spring-aspects\5.1.9.RELEASE</span><br></pre></td></tr></table></figure><p>org.springframework.spring-aspects</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mvn install:install-file -DgroupId=org.springframework.spring-aspects</span><br><span class="line">-DartifactId=spring-aspects  -Dversion=5.3.1 -Dpackaging=jar -Dfile=F:\maven\spring-aspects-5.3.1.jar</span><br></pre></td></tr></table></figure><p>mvn install:install-file -DgroupId&#x3D;org.springframework.spring-aspects<br>-DartifactId&#x3D;spring-aspects  -Dversion&#x3D;5.3.1 -Dpackaging&#x3D;jar -Dfile&#x3D;F:\maven\spring-aspects-5.3.1.jar</p>]]></content>
      
      
      <categories>
          
          <category> 2023 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> maven </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
